// Generated from java-escape by ANTLR 4.11.1

package com.codeforces.iomarkup.antlr;

import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast", "CheckReturnValue"})
public class IoMarkupLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.11.1", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		LINE_COMMENT=1, COMMENT=2, TRUE=3, FALSE=4, LOGICAL_AND=5, LOGICAL_OR=6, 
		LOGICAL_NOT=7, BITWISE_AND=8, BITWISE_XOR=9, BITWISE_OR=10, BITWISE_NOT=11, 
		EQUALS=12, NOT_EQUALS=13, LESS_EQUAL=14, GREATER_EQUAL=15, PLUS=16, MINUS=17, 
		MULTIPLICATION=18, DIVISION=19, MODULO=20, COLON=21, QUESTION=22, ASSIGN=23, 
		DOT=24, QUOTE=25, DOUBLE_QUOTE=26, COMMA=27, SEMICOLON=28, LESS=29, GREATER=30, 
		LBRACE=31, RBRACE=32, LBRACKET=33, RBRACKET=34, LPAR=35, RPAR=36, EOLN_MODIFIER=37, 
		STRUCT=38, ENUM=39, MAPS=40, MAPPER=41, IF=42, EXPONENT=43, DIGITS=44, 
		NAME=45, WS=46, CHAR=47, STRING=48;
	public static String[] channelNames = {
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN"
	};

	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	private static String[] makeRuleNames() {
		return new String[] {
			"LINE_COMMENT", "COMMENT", "TRUE", "FALSE", "LOGICAL_AND", "LOGICAL_OR", 
			"LOGICAL_NOT", "BITWISE_AND", "BITWISE_XOR", "BITWISE_OR", "BITWISE_NOT", 
			"EQUALS", "NOT_EQUALS", "LESS_EQUAL", "GREATER_EQUAL", "PLUS", "MINUS", 
			"MULTIPLICATION", "DIVISION", "MODULO", "COLON", "QUESTION", "ASSIGN", 
			"DOT", "QUOTE", "DOUBLE_QUOTE", "COMMA", "SEMICOLON", "LESS", "GREATER", 
			"LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "LPAR", "RPAR", "EOLN_MODIFIER", 
			"STRUCT", "ENUM", "MAPS", "MAPPER", "IF", "EXPONENT", "DIGITS", "NAME", 
			"WS", "CHAR", "STRING"
		};
	}
	public static final String[] ruleNames = makeRuleNames();

	private static String[] makeLiteralNames() {
		return new String[] {
			null, null, null, "'true'", "'false'", "'&&'", "'||'", "'!'", "'&'", 
			"'^'", "'|'", "'~'", "'=='", "'!='", "'<='", "'>='", "'+'", "'-'", "'*'", 
			"'/'", "'%'", "':'", "'?'", "'='", "'.'", "'''", "'\"'", "','", "';'", 
			"'<'", "'>'", "'{'", "'}'", "'['", "']'", "'('", "')'", "'eoln'", "'struct'", 
			"'enum'", "'maps'", "'mapper'", "'if'"
		};
	}
	private static final String[] _LITERAL_NAMES = makeLiteralNames();
	private static String[] makeSymbolicNames() {
		return new String[] {
			null, "LINE_COMMENT", "COMMENT", "TRUE", "FALSE", "LOGICAL_AND", "LOGICAL_OR", 
			"LOGICAL_NOT", "BITWISE_AND", "BITWISE_XOR", "BITWISE_OR", "BITWISE_NOT", 
			"EQUALS", "NOT_EQUALS", "LESS_EQUAL", "GREATER_EQUAL", "PLUS", "MINUS", 
			"MULTIPLICATION", "DIVISION", "MODULO", "COLON", "QUESTION", "ASSIGN", 
			"DOT", "QUOTE", "DOUBLE_QUOTE", "COMMA", "SEMICOLON", "LESS", "GREATER", 
			"LBRACE", "RBRACE", "LBRACKET", "RBRACKET", "LPAR", "RPAR", "EOLN_MODIFIER", 
			"STRUCT", "ENUM", "MAPS", "MAPPER", "IF", "EXPONENT", "DIGITS", "NAME", 
			"WS", "CHAR", "STRING"
		};
	}
	private static final String[] _SYMBOLIC_NAMES = makeSymbolicNames();
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public IoMarkupLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "IoMarkupLexer.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getChannelNames() { return channelNames; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\u0004\u00000\u0113\u0006\uffff\uffff\u0002\u0000\u0007\u0000\u0002\u0001"+
		"\u0007\u0001\u0002\u0002\u0007\u0002\u0002\u0003\u0007\u0003\u0002\u0004"+
		"\u0007\u0004\u0002\u0005\u0007\u0005\u0002\u0006\u0007\u0006\u0002\u0007"+
		"\u0007\u0007\u0002\b\u0007\b\u0002\t\u0007\t\u0002\n\u0007\n\u0002\u000b"+
		"\u0007\u000b\u0002\f\u0007\f\u0002\r\u0007\r\u0002\u000e\u0007\u000e\u0002"+
		"\u000f\u0007\u000f\u0002\u0010\u0007\u0010\u0002\u0011\u0007\u0011\u0002"+
		"\u0012\u0007\u0012\u0002\u0013\u0007\u0013\u0002\u0014\u0007\u0014\u0002"+
		"\u0015\u0007\u0015\u0002\u0016\u0007\u0016\u0002\u0017\u0007\u0017\u0002"+
		"\u0018\u0007\u0018\u0002\u0019\u0007\u0019\u0002\u001a\u0007\u001a\u0002"+
		"\u001b\u0007\u001b\u0002\u001c\u0007\u001c\u0002\u001d\u0007\u001d\u0002"+
		"\u001e\u0007\u001e\u0002\u001f\u0007\u001f\u0002 \u0007 \u0002!\u0007"+
		"!\u0002\"\u0007\"\u0002#\u0007#\u0002$\u0007$\u0002%\u0007%\u0002&\u0007"+
		"&\u0002\'\u0007\'\u0002(\u0007(\u0002)\u0007)\u0002*\u0007*\u0002+\u0007"+
		"+\u0002,\u0007,\u0002-\u0007-\u0002.\u0007.\u0002/\u0007/\u0001\u0000"+
		"\u0001\u0000\u0001\u0000\u0001\u0000\u0005\u0000f\b\u0000\n\u0000\f\u0000"+
		"i\t\u0000\u0001\u0000\u0003\u0000l\b\u0000\u0001\u0000\u0003\u0000o\b"+
		"\u0000\u0001\u0000\u0001\u0000\u0001\u0001\u0001\u0001\u0001\u0001\u0001"+
		"\u0001\u0005\u0001w\b\u0001\n\u0001\f\u0001z\t\u0001\u0001\u0001\u0001"+
		"\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0001\u0002\u0001\u0002\u0001"+
		"\u0002\u0001\u0002\u0001\u0002\u0001\u0003\u0001\u0003\u0001\u0003\u0001"+
		"\u0003\u0001\u0003\u0001\u0003\u0001\u0004\u0001\u0004\u0001\u0004\u0001"+
		"\u0005\u0001\u0005\u0001\u0005\u0001\u0006\u0001\u0006\u0001\u0007\u0001"+
		"\u0007\u0001\b\u0001\b\u0001\t\u0001\t\u0001\n\u0001\n\u0001\u000b\u0001"+
		"\u000b\u0001\u000b\u0001\f\u0001\f\u0001\f\u0001\r\u0001\r\u0001\r\u0001"+
		"\u000e\u0001\u000e\u0001\u000e\u0001\u000f\u0001\u000f\u0001\u0010\u0001"+
		"\u0010\u0001\u0011\u0001\u0011\u0001\u0012\u0001\u0012\u0001\u0013\u0001"+
		"\u0013\u0001\u0014\u0001\u0014\u0001\u0015\u0001\u0015\u0001\u0016\u0001"+
		"\u0016\u0001\u0017\u0001\u0017\u0001\u0018\u0001\u0018\u0001\u0019\u0001"+
		"\u0019\u0001\u001a\u0001\u001a\u0001\u001b\u0001\u001b\u0001\u001c\u0001"+
		"\u001c\u0001\u001d\u0001\u001d\u0001\u001e\u0001\u001e\u0001\u001f\u0001"+
		"\u001f\u0001 \u0001 \u0001!\u0001!\u0001\"\u0001\"\u0001#\u0001#\u0001"+
		"$\u0001$\u0001$\u0001$\u0001$\u0001%\u0001%\u0001%\u0001%\u0001%\u0001"+
		"%\u0001%\u0001&\u0001&\u0001&\u0001&\u0001&\u0001\'\u0001\'\u0001\'\u0001"+
		"\'\u0001\'\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001(\u0001)\u0001"+
		")\u0001)\u0001*\u0001*\u0001+\u0004+\u00f5\b+\u000b+\f+\u00f6\u0001,\u0001"+
		",\u0005,\u00fb\b,\n,\f,\u00fe\t,\u0001-\u0004-\u0101\b-\u000b-\f-\u0102"+
		"\u0001-\u0001-\u0001.\u0001.\u0001.\u0001.\u0001/\u0001/\u0005/\u010d"+
		"\b/\n/\f/\u0110\t/\u0001/\u0001/\u0002gx\u00000\u0001\u0001\u0003\u0002"+
		"\u0005\u0003\u0007\u0004\t\u0005\u000b\u0006\r\u0007\u000f\b\u0011\t\u0013"+
		"\n\u0015\u000b\u0017\f\u0019\r\u001b\u000e\u001d\u000f\u001f\u0010!\u0011"+
		"#\u0012%\u0013\'\u0014)\u0015+\u0016-\u0017/\u00181\u00193\u001a5\u001b"+
		"7\u001c9\u001d;\u001e=\u001f? A!C\"E#G$I%K&M\'O(Q)S*U+W,Y-[.]/_0\u0001"+
		"\u0000\b\u0001\u0001\n\n\u0002\u0000EEee\u0003\u0000\'\'09__\u0003\u0000"+
		"AZ__az\u0004\u000009AZ__az\u0003\u0000\t\n\r\r  \u0002\u0000\'\'^^\u0002"+
		"\u0000\"\"^^\u0119\u0000\u0001\u0001\u0000\u0000\u0000\u0000\u0003\u0001"+
		"\u0000\u0000\u0000\u0000\u0005\u0001\u0000\u0000\u0000\u0000\u0007\u0001"+
		"\u0000\u0000\u0000\u0000\t\u0001\u0000\u0000\u0000\u0000\u000b\u0001\u0000"+
		"\u0000\u0000\u0000\r\u0001\u0000\u0000\u0000\u0000\u000f\u0001\u0000\u0000"+
		"\u0000\u0000\u0011\u0001\u0000\u0000\u0000\u0000\u0013\u0001\u0000\u0000"+
		"\u0000\u0000\u0015\u0001\u0000\u0000\u0000\u0000\u0017\u0001\u0000\u0000"+
		"\u0000\u0000\u0019\u0001\u0000\u0000\u0000\u0000\u001b\u0001\u0000\u0000"+
		"\u0000\u0000\u001d\u0001\u0000\u0000\u0000\u0000\u001f\u0001\u0000\u0000"+
		"\u0000\u0000!\u0001\u0000\u0000\u0000\u0000#\u0001\u0000\u0000\u0000\u0000"+
		"%\u0001\u0000\u0000\u0000\u0000\'\u0001\u0000\u0000\u0000\u0000)\u0001"+
		"\u0000\u0000\u0000\u0000+\u0001\u0000\u0000\u0000\u0000-\u0001\u0000\u0000"+
		"\u0000\u0000/\u0001\u0000\u0000\u0000\u00001\u0001\u0000\u0000\u0000\u0000"+
		"3\u0001\u0000\u0000\u0000\u00005\u0001\u0000\u0000\u0000\u00007\u0001"+
		"\u0000\u0000\u0000\u00009\u0001\u0000\u0000\u0000\u0000;\u0001\u0000\u0000"+
		"\u0000\u0000=\u0001\u0000\u0000\u0000\u0000?\u0001\u0000\u0000\u0000\u0000"+
		"A\u0001\u0000\u0000\u0000\u0000C\u0001\u0000\u0000\u0000\u0000E\u0001"+
		"\u0000\u0000\u0000\u0000G\u0001\u0000\u0000\u0000\u0000I\u0001\u0000\u0000"+
		"\u0000\u0000K\u0001\u0000\u0000\u0000\u0000M\u0001\u0000\u0000\u0000\u0000"+
		"O\u0001\u0000\u0000\u0000\u0000Q\u0001\u0000\u0000\u0000\u0000S\u0001"+
		"\u0000\u0000\u0000\u0000U\u0001\u0000\u0000\u0000\u0000W\u0001\u0000\u0000"+
		"\u0000\u0000Y\u0001\u0000\u0000\u0000\u0000[\u0001\u0000\u0000\u0000\u0000"+
		"]\u0001\u0000\u0000\u0000\u0000_\u0001\u0000\u0000\u0000\u0001a\u0001"+
		"\u0000\u0000\u0000\u0003r\u0001\u0000\u0000\u0000\u0005\u0080\u0001\u0000"+
		"\u0000\u0000\u0007\u0085\u0001\u0000\u0000\u0000\t\u008b\u0001\u0000\u0000"+
		"\u0000\u000b\u008e\u0001\u0000\u0000\u0000\r\u0091\u0001\u0000\u0000\u0000"+
		"\u000f\u0093\u0001\u0000\u0000\u0000\u0011\u0095\u0001\u0000\u0000\u0000"+
		"\u0013\u0097\u0001\u0000\u0000\u0000\u0015\u0099\u0001\u0000\u0000\u0000"+
		"\u0017\u009b\u0001\u0000\u0000\u0000\u0019\u009e\u0001\u0000\u0000\u0000"+
		"\u001b\u00a1\u0001\u0000\u0000\u0000\u001d\u00a4\u0001\u0000\u0000\u0000"+
		"\u001f\u00a7\u0001\u0000\u0000\u0000!\u00a9\u0001\u0000\u0000\u0000#\u00ab"+
		"\u0001\u0000\u0000\u0000%\u00ad\u0001\u0000\u0000\u0000\'\u00af\u0001"+
		"\u0000\u0000\u0000)\u00b1\u0001\u0000\u0000\u0000+\u00b3\u0001\u0000\u0000"+
		"\u0000-\u00b5\u0001\u0000\u0000\u0000/\u00b7\u0001\u0000\u0000\u00001"+
		"\u00b9\u0001\u0000\u0000\u00003\u00bb\u0001\u0000\u0000\u00005\u00bd\u0001"+
		"\u0000\u0000\u00007\u00bf\u0001\u0000\u0000\u00009\u00c1\u0001\u0000\u0000"+
		"\u0000;\u00c3\u0001\u0000\u0000\u0000=\u00c5\u0001\u0000\u0000\u0000?"+
		"\u00c7\u0001\u0000\u0000\u0000A\u00c9\u0001\u0000\u0000\u0000C\u00cb\u0001"+
		"\u0000\u0000\u0000E\u00cd\u0001\u0000\u0000\u0000G\u00cf\u0001\u0000\u0000"+
		"\u0000I\u00d1\u0001\u0000\u0000\u0000K\u00d6\u0001\u0000\u0000\u0000M"+
		"\u00dd\u0001\u0000\u0000\u0000O\u00e2\u0001\u0000\u0000\u0000Q\u00e7\u0001"+
		"\u0000\u0000\u0000S\u00ee\u0001\u0000\u0000\u0000U\u00f1\u0001\u0000\u0000"+
		"\u0000W\u00f4\u0001\u0000\u0000\u0000Y\u00f8\u0001\u0000\u0000\u0000["+
		"\u0100\u0001\u0000\u0000\u0000]\u0106\u0001\u0000\u0000\u0000_\u010a\u0001"+
		"\u0000\u0000\u0000ab\u0005/\u0000\u0000bc\u0005/\u0000\u0000cg\u0001\u0000"+
		"\u0000\u0000df\t\u0000\u0000\u0000ed\u0001\u0000\u0000\u0000fi\u0001\u0000"+
		"\u0000\u0000gh\u0001\u0000\u0000\u0000ge\u0001\u0000\u0000\u0000hk\u0001"+
		"\u0000\u0000\u0000ig\u0001\u0000\u0000\u0000jl\u0005\r\u0000\u0000kj\u0001"+
		"\u0000\u0000\u0000kl\u0001\u0000\u0000\u0000ln\u0001\u0000\u0000\u0000"+
		"mo\u0007\u0000\u0000\u0000nm\u0001\u0000\u0000\u0000op\u0001\u0000\u0000"+
		"\u0000pq\u0006\u0000\u0000\u0000q\u0002\u0001\u0000\u0000\u0000rs\u0005"+
		"/\u0000\u0000st\u0005*\u0000\u0000tx\u0001\u0000\u0000\u0000uw\t\u0000"+
		"\u0000\u0000vu\u0001\u0000\u0000\u0000wz\u0001\u0000\u0000\u0000xy\u0001"+
		"\u0000\u0000\u0000xv\u0001\u0000\u0000\u0000y{\u0001\u0000\u0000\u0000"+
		"zx\u0001\u0000\u0000\u0000{|\u0005*\u0000\u0000|}\u0005/\u0000\u0000}"+
		"~\u0001\u0000\u0000\u0000~\u007f\u0006\u0001\u0000\u0000\u007f\u0004\u0001"+
		"\u0000\u0000\u0000\u0080\u0081\u0005t\u0000\u0000\u0081\u0082\u0005r\u0000"+
		"\u0000\u0082\u0083\u0005u\u0000\u0000\u0083\u0084\u0005e\u0000\u0000\u0084"+
		"\u0006\u0001\u0000\u0000\u0000\u0085\u0086\u0005f\u0000\u0000\u0086\u0087"+
		"\u0005a\u0000\u0000\u0087\u0088\u0005l\u0000\u0000\u0088\u0089\u0005s"+
		"\u0000\u0000\u0089\u008a\u0005e\u0000\u0000\u008a\b\u0001\u0000\u0000"+
		"\u0000\u008b\u008c\u0005&\u0000\u0000\u008c\u008d\u0005&\u0000\u0000\u008d"+
		"\n\u0001\u0000\u0000\u0000\u008e\u008f\u0005|\u0000\u0000\u008f\u0090"+
		"\u0005|\u0000\u0000\u0090\f\u0001\u0000\u0000\u0000\u0091\u0092\u0005"+
		"!\u0000\u0000\u0092\u000e\u0001\u0000\u0000\u0000\u0093\u0094\u0005&\u0000"+
		"\u0000\u0094\u0010\u0001\u0000\u0000\u0000\u0095\u0096\u0005^\u0000\u0000"+
		"\u0096\u0012\u0001\u0000\u0000\u0000\u0097\u0098\u0005|\u0000\u0000\u0098"+
		"\u0014\u0001\u0000\u0000\u0000\u0099\u009a\u0005~\u0000\u0000\u009a\u0016"+
		"\u0001\u0000\u0000\u0000\u009b\u009c\u0005=\u0000\u0000\u009c\u009d\u0005"+
		"=\u0000\u0000\u009d\u0018\u0001\u0000\u0000\u0000\u009e\u009f\u0005!\u0000"+
		"\u0000\u009f\u00a0\u0005=\u0000\u0000\u00a0\u001a\u0001\u0000\u0000\u0000"+
		"\u00a1\u00a2\u0005<\u0000\u0000\u00a2\u00a3\u0005=\u0000\u0000\u00a3\u001c"+
		"\u0001\u0000\u0000\u0000\u00a4\u00a5\u0005>\u0000\u0000\u00a5\u00a6\u0005"+
		"=\u0000\u0000\u00a6\u001e\u0001\u0000\u0000\u0000\u00a7\u00a8\u0005+\u0000"+
		"\u0000\u00a8 \u0001\u0000\u0000\u0000\u00a9\u00aa\u0005-\u0000\u0000\u00aa"+
		"\"\u0001\u0000\u0000\u0000\u00ab\u00ac\u0005*\u0000\u0000\u00ac$\u0001"+
		"\u0000\u0000\u0000\u00ad\u00ae\u0005/\u0000\u0000\u00ae&\u0001\u0000\u0000"+
		"\u0000\u00af\u00b0\u0005%\u0000\u0000\u00b0(\u0001\u0000\u0000\u0000\u00b1"+
		"\u00b2\u0005:\u0000\u0000\u00b2*\u0001\u0000\u0000\u0000\u00b3\u00b4\u0005"+
		"?\u0000\u0000\u00b4,\u0001\u0000\u0000\u0000\u00b5\u00b6\u0005=\u0000"+
		"\u0000\u00b6.\u0001\u0000\u0000\u0000\u00b7\u00b8\u0005.\u0000\u0000\u00b8"+
		"0\u0001\u0000\u0000\u0000\u00b9\u00ba\u0005\'\u0000\u0000\u00ba2\u0001"+
		"\u0000\u0000\u0000\u00bb\u00bc\u0005\"\u0000\u0000\u00bc4\u0001\u0000"+
		"\u0000\u0000\u00bd\u00be\u0005,\u0000\u0000\u00be6\u0001\u0000\u0000\u0000"+
		"\u00bf\u00c0\u0005;\u0000\u0000\u00c08\u0001\u0000\u0000\u0000\u00c1\u00c2"+
		"\u0005<\u0000\u0000\u00c2:\u0001\u0000\u0000\u0000\u00c3\u00c4\u0005>"+
		"\u0000\u0000\u00c4<\u0001\u0000\u0000\u0000\u00c5\u00c6\u0005{\u0000\u0000"+
		"\u00c6>\u0001\u0000\u0000\u0000\u00c7\u00c8\u0005}\u0000\u0000\u00c8@"+
		"\u0001\u0000\u0000\u0000\u00c9\u00ca\u0005[\u0000\u0000\u00caB\u0001\u0000"+
		"\u0000\u0000\u00cb\u00cc\u0005]\u0000\u0000\u00ccD\u0001\u0000\u0000\u0000"+
		"\u00cd\u00ce\u0005(\u0000\u0000\u00ceF\u0001\u0000\u0000\u0000\u00cf\u00d0"+
		"\u0005)\u0000\u0000\u00d0H\u0001\u0000\u0000\u0000\u00d1\u00d2\u0005e"+
		"\u0000\u0000\u00d2\u00d3\u0005o\u0000\u0000\u00d3\u00d4\u0005l\u0000\u0000"+
		"\u00d4\u00d5\u0005n\u0000\u0000\u00d5J\u0001\u0000\u0000\u0000\u00d6\u00d7"+
		"\u0005s\u0000\u0000\u00d7\u00d8\u0005t\u0000\u0000\u00d8\u00d9\u0005r"+
		"\u0000\u0000\u00d9\u00da\u0005u\u0000\u0000\u00da\u00db\u0005c\u0000\u0000"+
		"\u00db\u00dc\u0005t\u0000\u0000\u00dcL\u0001\u0000\u0000\u0000\u00dd\u00de"+
		"\u0005e\u0000\u0000\u00de\u00df\u0005n\u0000\u0000\u00df\u00e0\u0005u"+
		"\u0000\u0000\u00e0\u00e1\u0005m\u0000\u0000\u00e1N\u0001\u0000\u0000\u0000"+
		"\u00e2\u00e3\u0005m\u0000\u0000\u00e3\u00e4\u0005a\u0000\u0000\u00e4\u00e5"+
		"\u0005p\u0000\u0000\u00e5\u00e6\u0005s\u0000\u0000\u00e6P\u0001\u0000"+
		"\u0000\u0000\u00e7\u00e8\u0005m\u0000\u0000\u00e8\u00e9\u0005a\u0000\u0000"+
		"\u00e9\u00ea\u0005p\u0000\u0000\u00ea\u00eb\u0005p\u0000\u0000\u00eb\u00ec"+
		"\u0005e\u0000\u0000\u00ec\u00ed\u0005r\u0000\u0000\u00edR\u0001\u0000"+
		"\u0000\u0000\u00ee\u00ef\u0005i\u0000\u0000\u00ef\u00f0\u0005f\u0000\u0000"+
		"\u00f0T\u0001\u0000\u0000\u0000\u00f1\u00f2\u0007\u0001\u0000\u0000\u00f2"+
		"V\u0001\u0000\u0000\u0000\u00f3\u00f5\u0007\u0002\u0000\u0000\u00f4\u00f3"+
		"\u0001\u0000\u0000\u0000\u00f5\u00f6\u0001\u0000\u0000\u0000\u00f6\u00f4"+
		"\u0001\u0000\u0000\u0000\u00f6\u00f7\u0001\u0000\u0000\u0000\u00f7X\u0001"+
		"\u0000\u0000\u0000\u00f8\u00fc\u0007\u0003\u0000\u0000\u00f9\u00fb\u0007"+
		"\u0004\u0000\u0000\u00fa\u00f9\u0001\u0000\u0000\u0000\u00fb\u00fe\u0001"+
		"\u0000\u0000\u0000\u00fc\u00fa\u0001\u0000\u0000\u0000\u00fc\u00fd\u0001"+
		"\u0000\u0000\u0000\u00fdZ\u0001\u0000\u0000\u0000\u00fe\u00fc\u0001\u0000"+
		"\u0000\u0000\u00ff\u0101\u0007\u0005\u0000\u0000\u0100\u00ff\u0001\u0000"+
		"\u0000\u0000\u0101\u0102\u0001\u0000\u0000\u0000\u0102\u0100\u0001\u0000"+
		"\u0000\u0000\u0102\u0103\u0001\u0000\u0000\u0000\u0103\u0104\u0001\u0000"+
		"\u0000\u0000\u0104\u0105\u0006-\u0000\u0000\u0105\\\u0001\u0000\u0000"+
		"\u0000\u0106\u0107\u0005\'\u0000\u0000\u0107\u0108\u0007\u0006\u0000\u0000"+
		"\u0108\u0109\u0005\'\u0000\u0000\u0109^\u0001\u0000\u0000\u0000\u010a"+
		"\u010e\u0005\"\u0000\u0000\u010b\u010d\u0007\u0007\u0000\u0000\u010c\u010b"+
		"\u0001\u0000\u0000\u0000\u010d\u0110\u0001\u0000\u0000\u0000\u010e\u010c"+
		"\u0001\u0000\u0000\u0000\u010e\u010f\u0001\u0000\u0000\u0000\u010f\u0111"+
		"\u0001\u0000\u0000\u0000\u0110\u010e\u0001\u0000\u0000\u0000\u0111\u0112"+
		"\u0005\"\u0000\u0000\u0112`\u0001\u0000\u0000\u0000\t\u0000gknx\u00f6"+
		"\u00fc\u0102\u010e\u0001\u0006\u0000\u0000";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}